const express = require('express');
const { collection,getDocs,query,where} = require('firebase/firestore');
const { initializeApp } = require('firebase/app');
const { getFirestore } = require('firebase/firestore');
const firebaseConfig = require('../../../../firebase');
const firebaseApp = initializeApp(firebaseConfig);
const db = getFirestore(firebaseApp);
const router = express.Router();
const axios = require('axios');
const requestCounts = {};
const MAX_REQUESTS_PER_SECOND = 10;
const LINE_ACCESS_TOKEN = process.env.LINE_ACCESS_TOKEN; 
const LINE_BOT_API = "https://api.line.me/v2/bot/message"; 
const headers = {
    'Content-Type': 'application/json',
    'Authorization': `Bearer ${LINE_ACCESS_TOKEN}` 
}
const limitRequests = (req, res, next) => {
    if (req.ip in requestCounts && requestCounts[req.ip] >= MAX_REQUESTS_PER_SECOND) {
        return res.status(429).send('Too Many Requests (Per Second)');
    }
    
    requestCounts[req.ip] = (requestCounts[req.ip] || 0) + 1;

    setTimeout(() => {
        requestCounts[req.ip] = (requestCounts[req.ip] || 0) - 1;
    }, 1000);

    next();
};



router.post('/NotificationEditAppointmentV2', limitRequests, async (req, res) => {
    const data = req.body;
        const studentID = req.body.id;
        const usersCollection = collection(db, 'users');
        const userQuerySnapshot = await getDocs(query(usersCollection, where('id', '==', studentID)));
        const userDocuments = userQuerySnapshot.docs;
        const userData = userDocuments.length > 0 ? userDocuments[0].data() : null;
        let type = "";
        if (data.type === "talk"){
            type = "‡∏õ‡∏£‡∏∂‡∏Å‡∏©‡∏≤‡πÅ‡∏û‡∏ó‡∏¢‡πå";
        } else if (data.type === "physic"){
            type = "‡∏ö‡∏£‡∏¥‡∏Å‡∏≤‡∏£‡∏ó‡πç‡∏≤‡∏Å‡∏≤‡∏¢‡∏†‡∏≤‡∏û"
        } else {
            type = "‡∏ö‡∏£‡∏¥‡∏Å‡∏≤‡∏£‡∏ù‡∏±‡∏á‡πÄ‡∏Ç‡πá‡∏°"
        }

        const transporter = nodemailer.createTransport({
            service: 'gmail',
            auth: {
                user: 'kmutthealthcareunit@gmail.com',
                pass: 'vqos ixxk pscf bqwm'
            }
        })
        const option = {
            from: 'kmutthealthcareunit@gmail.com',
            to: `${userData.email}`,
            subject: `[‡∏ô‡∏±‡∏î‡∏´‡∏°‡∏≤‡∏¢‡∏Ñ‡∏∏‡∏ì‡∏ñ‡∏π‡∏Å‡∏¢‡∏Å‡πÄ‡∏•‡∏¥‡∏Å]`,
            html: `
        
            <img src="https://i.imgur.com/NKnMp3K.png" alt="HCU" style="width:100px;height:100px;margin-left: 10px;">
            <h3 style="margin-left: 20px; margin-top: 0px;">‡∏™‡∏ß‡∏±‡∏™‡∏î‡∏µ‡∏Ñ‡∏∏‡∏ì ${userData.firstName}  ${userData.lastName}</h3>
            <p style="margin-left: 20px; margin-bottom: 40px;">üóìÔ∏è ‡∏£‡∏≤‡∏¢‡∏•‡∏∞‡πÄ‡∏≠‡∏µ‡∏¢‡∏î‡∏Å‡∏≤‡∏£‡∏ô‡∏±‡∏î‡∏Å‡πà‡∏≠‡∏ô‡∏ñ‡∏π‡∏Å‡πÄ‡∏•‡∏∑‡πà‡∏≠‡∏ô</b></p>
            <p style="margin-left: 20px; margin-bottom: 40px;">‡∏ô‡∏±‡∏î‡∏´‡∏°‡∏≤‡∏¢ <b>${data.clinic}</b> ‡πÉ‡∏ô‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà <b> ${data.oldDate}</b></p>
            <p style="margin-left: 20px; margin-bottom: 40px;">üóìÔ∏è ‡πÄ‡∏õ‡πá‡∏ô</b></p>
            <p style="margin-left: 20px; margin-bottom: 40px;">‡∏ô‡∏±‡∏î‡∏´‡∏°‡∏≤‡∏¢ <b>${data.clinic}</b> ‡πÉ‡∏ô‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà <b> ${data.date}</b>, ‡πÄ‡∏ß‡∏•‡∏≤ <b>${data.time}</b></p>
            <p style="margin-left: 20px; margin-bottom: 40px;">‡∏õ‡∏£‡∏∞‡πÄ‡∏†‡∏ó‡∏ô‡∏±‡∏î‡∏´‡∏°‡∏≤‡∏¢ : ${type}</p>
            <p style="margin-left: 20px"> <b>üôèüèª ‡∏Ç‡∏≠‡∏≠‡∏†‡∏±‡∏¢‡πÉ‡∏ô‡∏Ñ‡∏ß‡∏≤‡∏°‡πÑ‡∏°‡πà‡∏™‡∏∞‡∏î‡∏ß‡∏Å</p>
            <p style="margin-left: 20px">‡∏´‡∏≤‡∏Å‡∏ó‡πà‡∏≤‡∏ô‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£‡∏ô‡∏±‡∏î‡∏´‡∏°‡∏≤‡∏¢‡πÉ‡∏´‡∏°‡πà, ‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏ô‡∏±‡∏î‡∏´‡∏°‡∏≤‡∏¢‡∏ú‡πà‡∏≤‡∏ô‡∏ó‡∏≤‡∏á‡πÄ‡∏ß‡πá‡∏ö‡πÑ‡∏ã‡∏ï‡πå https://hcukmutt.vercel.app/ ‡∏´‡∏£‡∏∑‡∏≠‡∏ï‡∏¥‡∏î‡∏ï‡πà‡∏≠‡πÄ‡∏£‡∏≤‡∏ú‡πà‡∏≤‡∏ô‡πÄ‡∏ö‡∏≠‡∏£‡πå‡πÇ‡∏ó‡∏£ 02 470 8446 ‡∏≠‡∏¢‡πà‡∏≤‡∏á‡∏ô‡πâ‡∏≠‡∏¢ 24 ‡∏ä‡∏±‡πà‡∏ß‡πÇ‡∏°‡∏á‡∏Å‡πà‡∏≠‡∏ô‡πÄ‡∏ß‡∏•‡∏≤‡∏ô‡∏±‡∏î‡∏´‡∏°‡∏≤‡∏¢</p>
            <p style="margin-left: 20px; margin-bottom: 50px;">‡∏Ç‡∏≠‡∏ö‡∏Ñ‡∏∏‡∏ì‡∏ó‡∏µ‡πà‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡πÉ‡∏ä‡πâ‡∏ö‡∏£‡∏¥‡∏Å‡∏≤‡∏£‡∏Ç‡∏≠‡∏á‡πÄ‡∏£‡∏≤ ‡πÅ‡∏•‡∏∞‡πÄ‡∏£‡∏≤‡∏´‡∏ß‡∏±‡∏á‡∏ß‡πà‡∏≤‡∏à‡∏∞‡πÑ‡∏î‡πâ‡πÉ‡∏´‡πâ‡∏ö‡∏£‡∏¥‡∏Å‡∏≤‡∏£‡∏ó‡πà‡∏≤‡∏ô‡πÉ‡∏ô‡πÄ‡∏£‡πá‡∏ß‡πÜ ‡∏ô‡∏µ‡πâ</p>
            
            <div style="margin: 0px 20px; margin-bottom: 60px;">
                <p>‡πÄ‡∏ß‡∏•‡∏≤‡∏ó‡∏≥‡∏Å‡∏≤‡∏£: ‡∏ä‡πà‡∏ß‡∏á‡πÄ‡∏õ‡∏¥‡∏î‡∏†‡∏≤‡∏Ñ‡∏Å‡∏≤‡∏£‡∏®‡∏∂‡∏Å‡∏©‡∏≤</p>
                <ul>
                    <li>‡∏ß‡∏±‡∏ô‡∏à‡∏±‡∏ô‡∏ó‡∏£‡πå - ‡∏ß‡∏±‡∏ô‡∏®‡∏∏‡∏Å‡∏£‡πå: 08.30 - 18.00 ‡∏ô.</li>
                    <li>‡∏ß‡∏±‡∏ô‡πÄ‡∏™‡∏≤‡∏£‡πå: 08.30 - 16.30 ‡∏ô.</li>
                    <li>‡∏¢‡∏Å‡πÄ‡∏ß‡πâ‡∏ô‡∏ß‡∏±‡∏ô‡∏≠‡∏≤‡∏ó‡∏¥‡∏ï‡∏¢‡πå‡πÅ‡∏•‡∏∞‡∏ß‡∏±‡∏ô‡∏´‡∏¢‡∏∏‡∏î‡∏ô‡∏±‡∏Å‡∏Ç‡∏±‡∏ï‡∏§‡∏Å‡∏©‡πå</li>
                </ul>
                <p>‡πÄ‡∏ß‡∏•‡∏≤‡∏ó‡∏≥‡∏Å‡∏≤‡∏£: ‡∏ä‡πà‡∏ß‡∏á‡∏õ‡∏¥‡∏î‡∏†‡∏≤‡∏Ñ‡∏Å‡∏≤‡∏£‡∏®‡∏∂‡∏Å‡∏©‡∏≤</p>
                <ul>
                    <li>‡∏ß‡∏±‡∏ô‡∏à‡∏±‡∏ô‡∏ó‡∏£‡πå - ‡∏ß‡∏±‡∏ô‡∏®‡∏∏‡∏Å‡∏£‡πå: 08.30 - 16.30 ‡∏ô.</li>
                    <li>‡∏¢‡∏Å‡πÄ‡∏ß‡πâ‡∏ô‡∏ß‡∏±‡∏ô‡πÄ‡∏™‡∏≤‡∏£‡πå, ‡∏ß‡∏±‡∏ô‡∏≠‡∏≤‡∏ó‡∏¥‡∏ï‡∏¢‡πå ‡πÅ‡∏•‡∏∞‡∏ß‡∏±‡∏ô‡∏´‡∏¢‡∏∏‡∏î‡∏ô‡∏±‡∏Å‡∏Ç‡∏±‡∏ï‡∏§‡∏Å‡∏©‡πå</li>
                </ul>
            </div>
        
            <div style="margin-right: 20px;">
                <p style="margin-left: 20px">‡∏î‡πâ‡∏ß‡∏¢‡∏Ñ‡∏ß‡∏≤‡∏°‡πÄ‡∏Ñ‡∏≤‡∏£‡∏û,</p>
                <p style="margin-left: 20px">Health Care Unit KMUTT</p>
                <p style="margin-left: 20px">‡∏Å‡∏•‡∏∏‡πà‡∏°‡∏á‡∏≤‡∏ô‡∏ö‡∏£‡∏¥‡∏Å‡∏≤‡∏£‡∏™‡∏∏‡∏Ç‡∏†‡∏≤‡∏û‡πÅ‡∏•‡∏∞‡∏≠‡∏ô‡∏≤‡∏°‡∏±‡∏¢</p>
                <p style="margin-left: 20px">02 470 8446</p>
                <p style="margin-left: 20px">hcu@kmutt.ac.th</p>
            </div>
        `
        }
    
        transporter.sendMail(option, (err, info) => {
            if (err) {
                console.log('err', err)
                return res.status(200).json({
                    RespCode: 400,
                    RespMessage: 'bad',
                    RespError: err
                })
            }
            else {
                console.log('Send: ' + info.response)
                return res.status(200).json({
                    RespCode: 200,
                    RespMessage: 'good',
                })
            }
        })
    try {
        const body = {
            "to": `${userData.userLineID}`,
            "messages": [
                {
                    "type": "flex",
                    "altText": "‚ÄºÔ∏è ‡πÄ‡∏•‡∏∑‡πà‡∏≠‡∏ô‡∏Å‡∏≤‡∏£‡∏ô‡∏±‡∏î‡∏´‡∏°‡∏≤‡∏¢ ‚ÄºÔ∏è",
                    "contents": {
                    "type": "bubble",
                    "header": {
                    "type": "box",
                    "layout": "vertical",
                    "contents": [
                        {
                            "type": "text",
                            "size": "lg",
                            "weight" : "bold",
                            "align" : "center",
                            "text": "‚ÄºÔ∏è ‡πÄ‡∏•‡∏∑‡πà‡∏≠‡∏ô‡∏Å‡∏≤‡∏£‡∏ô‡∏±‡∏î‡∏´‡∏°‡∏≤‡∏¢ ‚ÄºÔ∏è"
                        }
                    ]
                        },
                        "hero": {
                            "type": "image",
                            "url": "https://i.pinimg.com/564x/8f/59/1a/8f591a8ae350cf6cbeb5c7534463c11a.jpg",
                            "size": "full",
                            "aspectRatio": "1.5:1"
                        },
                      "body": {
                          "type": "box",
                          "layout": "vertical",
                          "contents": [
                            {
                                "type": "text",
                                "text": `üóìÔ∏è‡∏à‡∏≤‡∏Å‡πÄ‡∏î‡∏¥‡∏°`
                            },
                          {
                              "type": "text",
                              "text": `‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà : ${data.oldDate}`
                          },
                          {
                              "type": "text",
                              "text": `‡∏Ñ‡∏•‡∏¥‡∏ô‡∏¥‡∏Å : ${data.clinic}`
                          },
                          {
                          
                              "type": "text",
                              "text": "üóìÔ∏è‡πÄ‡∏õ‡πá‡∏ô"
                          },
                          {
                              "type": "text",
                              "text": `‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà : ${data.date}`
                          },
                          {
                              "type": "text",
                              "text": `‡∏Ñ‡∏•‡∏¥‡∏ô‡∏¥‡∏Å : ${data.clinic}`
                          },
                          {
                            "type": "text",
                            "text": `‡∏õ‡∏£‡∏∞‡πÄ‡∏†‡∏ó‡∏ô‡∏±‡∏î‡∏´‡∏°‡∏≤‡∏¢ : ${type}`
                        },
                          {
                              "type": "text",
                              "text": `‡πÄ‡∏ß‡∏•‡∏≤ : ${data.time}`
                          }
                          ]
                      }
                      }
                }
              
            ]
          }
        try {
        const response = await axios.post(`${LINE_BOT_API}/push`, body, { headers });
        console.log('Response:', response.data);
        } catch (error) {
        console.error('Error:', error);
        return res.status(500).json({ error: 'Internal server error' }); 
        }
        return res.json("success");


        
    } catch (error) {
        console.error(`Error fetching data: ${error}`);
        return res.status(500).json({ error: 'Internal server error' }); 
    }
});




module.exports = router;